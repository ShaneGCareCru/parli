name: Main Branch Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'token-service/**'

env:
  FLUTTER_VERSION: '3.16.0'
  PYTHON_VERSION: '3.11'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/token-service

jobs:
  # ==========================================
  # Build Release Artifacts
  # ==========================================
  build-flutter-release:
    name: Build Flutter Release
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get
        working-directory: app

      - name: Build Android release APK
        run: flutter build apk --release
        working-directory: app
        env:
          # Add keystore signing in production
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          STORE_FILE: ${{ secrets.STORE_FILE }}

      - name: Build iOS release (archive)
        run: flutter build ipa --release
        working-directory: app
        env:
          # Add provisioning profiles in production
          PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE }}
          CERTIFICATE_P12: ${{ secrets.CERTIFICATE_P12 }}

      - name: Upload Android release artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-release-apk
          path: app/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: Upload iOS release artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-release-ipa
          path: app/build/ios/ipa/*.ipa
          retention-days: 30

  # ==========================================
  # Build and Push Docker Image
  # ==========================================
  build-and-push-backend:
    name: Build & Push Backend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./token-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ==========================================
  # Deploy Notification
  # ==========================================
  deploy-notification:
    name: Deploy Notification
    runs-on: ubuntu-latest
    needs: [build-flutter-release, build-and-push-backend]
    if: success()
    
    steps:
      - name: Notify deployment success
        run: |
          echo "üöÄ Successfully built and pushed:"
          echo "‚úÖ Flutter Android/iOS release builds"
          echo "‚úÖ Backend Docker image to registry"
          echo ""
          echo "Ready for:"
          echo "üì± Mobile app store submission"
          echo "üê≥ Backend service deployment"