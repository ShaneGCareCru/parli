name: PR Build & Test

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - 'token-service/**'
      - '.github/workflows/**'
      - 'docker-compose.yml'

env:
  FLUTTER_VERSION: '3.35.0'
  PYTHON_VERSION: '3.11'

jobs:
  # ==========================================
  # Flutter Android & iOS Build
  # ==========================================
  flutter-build:
    name: Flutter Build (Android + iOS)
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Flutter doctor
        run: flutter doctor -v
        working-directory: app

      - name: Get Flutter dependencies
        run: flutter pub get
        working-directory: app

      - name: Run Flutter analyze
        run: flutter analyze
        working-directory: app

      - name: Run Flutter tests
        run: flutter test
        working-directory: app

      - name: Build Android APK (debug)
        run: flutter build apk --debug
        working-directory: app

      - name: Build iOS (debug, no codesign)
        run: flutter build ios --debug --no-codesign
        working-directory: app

      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: app/build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 7

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-debug-app
          path: app/build/ios/Debug-iphoneos/Runner.app/
          retention-days: 7

  # ==========================================
  # Python Backend Lint & Test
  # ==========================================
  backend-test:
    name: Backend Lint & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('token-service/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r token-service/requirements.txt
        working-directory: .

      - name: Run Black (code formatting check)
        run: black --check token-service/src token-service/tests
        working-directory: .

      - name: Run isort (import sorting check)
        run: isort --check-only token-service/src token-service/tests
        working-directory: .

      - name: Run flake8 (linting)
        run: flake8 token-service/src token-service/tests
        working-directory: .

      - name: Run pytest (tests)
        run: PYTHONPATH=. pytest tests --cov=src --cov-report=xml
        working-directory: ./token-service
        env:
          OPENAI_API_KEY: mock_key_for_testing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: backend
          name: backend-coverage

  # ==========================================
  # Docker Build Test
  # ==========================================
  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build token service image
        uses: docker/build-push-action@v5
        with:
          context: ./token-service
          push: false
          load: true
          tags: parli-token-service:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test container startup
        run: |
          # Start container in background
          docker run -d --name test-container \
            -p 8000:8000 \
            -e OPENAI_API_KEY=mock_key_for_testing \
            parli-token-service:test
          
          # Wait for startup
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:8000/healthz || exit 1
          
          # Cleanup
          docker stop test-container
          docker rm test-container

  # ==========================================
  # PR Summary Comment
  # ==========================================
  pr-comment:
    name: PR Build Summary
    runs-on: ubuntu-latest
    needs: [flutter-build, backend-test, docker-build]
    if: always()
    
    steps:
      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo, number } = context.issue;
            const flutter = '${{ needs.flutter-build.result }}';
            const backend = '${{ needs.backend-test.result }}';
            const docker = '${{ needs.docker-build.result }}';
            
            const status = (result) => {
              switch(result) {
                case 'success': return '✅';
                case 'failure': return '❌';
                case 'cancelled': return '⏹️';
                case 'skipped': return '⏸️';
                default: return '⚠️';
              }
            };
            
            const body = `## 🚀 PR Build Results
            
            | Component | Status | Result |
            |-----------|--------|---------|
            | Flutter Build | ${status(flutter)} | ${flutter} |
            | Backend Tests | ${status(backend)} | ${backend} |
            | Docker Build | ${status(docker)} | ${docker} |
            
            ${flutter === 'success' && backend === 'success' && docker === 'success' 
              ? '🎉 All checks passed! Ready for review.' 
              : '⚠️ Some checks failed. Please review the logs above.'}
            
            **Artifacts:**
            - Android Debug APK available for 7 days
            - iOS Debug build available for 7 days
            `;
            
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body
            });